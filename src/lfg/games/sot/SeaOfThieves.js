const {MessageEmbed} = require('discord.js')

class SeaOfThieves {
    constructor(message, unite) {
        Object.defineProperty(this, 'message', { value: message })
        Object.defineProperty(this, 'unite', { value: unite })
        const filter = (reaction, user) => ['ðŸ‡µ', 'ðŸ‡¯', 'ðŸ‡¸', 'ðŸ‡§', 'ðŸ‡¬'].includes(reaction.emoji.name) && user.id === message.author.id
        this.filter = filter
    }
    startCreation() {
        this.message.channel.send("Welcome to LFG Post Program. Please reply with the specified information and I will create your LFG Post.\n" +
            "Please select the reaction corresponding to list of modes below:")
        this.FirstStep(this.message)
    }

    FirstStep(message){
        this.FirstEmbed = new MessageEmbed({
            color: 0x0099ff,
            description: 'PvP: ðŸ‡µ\n'
                + 'Journey: ðŸ‡¯'
        });

        message.channel.send(this.FirstEmbed).then(async msg => {
            await msg.react('ðŸ‡µ')
            await msg.react('ðŸ‡¯')
            msg.awaitReactions(this.filter, {
                max: 1,
                time: 30000,
                errors: ['time']
            }).then(collected => {

                const reaction = collected.first()

                switch (reaction.emoji.name) {
                case 'ðŸ‡µ':
                    msg.delete({ timeout: 100 }).then(() =>
                    this.SecondStep(message))
                    break;
                case 'ðŸ‡¯':
                    msg.delete({ timeout: 100 }).then(() =>
                    this.SecondStep(message))
                    break;
                }
            }).catch(collected => {
                return message.channel.send("Time out!").then(msg => msg.delete({timeout: 1000}))
            });
        })


    }

    SecondStep(message){
        this.SecondEmbed = new MessageEmbed({
            color: 0x0099ff,
            description: 'Sloop: ðŸ‡¸\n'
                + 'Brigantine: ðŸ‡§\n'
                + 'Galleon: ðŸ‡¬'
        });
        message.channel.send(this.SecondEmbed).then(async msg => {
            await msg.react('ðŸ‡¸')
            await msg.react('ðŸ‡§')
            await msg.react('ðŸ‡¬')

            msg.awaitReactions(this.filter, {
                max: 1,
                time: 30000,
                errors: ['time']
            }).then(collected => {

                const reaction = collected.first()

                switch (reaction.emoji.name) {
                    case 'ðŸ‡¸':
                        msg.delete({timeout: 100}).then(() =>
                            this.SecondStep(message))
                        break;
                    case 'ðŸ‡§':
                        msg.delete({timeout: 100}).then(() =>
                            this.SecondStep(message))
                        break;
                    case 'ðŸ‡¬':
                        msg.delete({timeout: 100}).then(() =>
                            this.SecondStep(message))
                        break;
                }
            }).catch(collected => {
                msg.delete({timeout: 1000});
                return message.channel.send("Time out!")

            })
        })
    }
    saveData(){

    }
}

module.exports = SeaOfThieves;